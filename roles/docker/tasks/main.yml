---
# cleaning of previous installs
- name: Remove previous docker installation
  become: yes
  become_user: root
  apt:
    name: "{{ docker_uninstall }}"
    state: absent
    purge: yes

# installation dependencies
- name: Install docker dependencies with a cache update before
  become: yes
  become_user: root
  apt:
    update_cache: yes
    name: "{{ install_deps }}"
    state: present

# add the repo to package manager
- name: Create a folder for keyrings if it don't exists
  become: yes
  become_user: root
  file:
    path: /etc/apt/keyrings
    state: directory

- name: get the architecture
  shell: dpkg --print-architecture
  register: arch

- name: get the distro
  shell: cat /etc/os-release | grep ^ID= | awk '{split($0,a,"="); print a[2]}'
  register: distro

- name: Download the official docker repo gpg key
  become: yes
  become_user: root
  uri:
    url: https://download.docker.com/linux/{{ distro.stdout }}/gpg
    dest: /tmp/docker.gpg
    status_code: [200,304]

- name: Install the docker's gpg key
  become: yes
  become_user: root
  shell: gpg --dearmor --batch --yes -o /etc/apt/keyrings/docker.gpg /tmp/docker.gpg

- name: Set up the docker repository
  become: yes
  become_user: root
  apt_repository:
    repo: deb [arch={{ arch.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ distro.stdout }} {{ ansible_facts["lsb"]["codename"] }} stable
    state: present
    filename: docker

# install docker
- name: Install docker
  become: yes
  become_user: root
  apt:
    update_cache: yes
    name: "{{ docker_install }}"
    state: present

# post install configuration
- name: Create the docker group
  become: yes
  become_user: root
  group:
    name: docker
    state: present

- name: get the current user
  shell: echo $USER
  register: current_user

- name: add the current user in docker group
  become: yes
  become_user: root
  user:
    name: "{{ current_user.stdout }}"
    groups: docker
    append: yes
    state: present

# chown the docker socket with ansible admin
- name: Chown the docker socket with ansible admin
  become: yes
  become_user: root
  file:
    path: /var/run/docker.sock
    owner: "{{ ansible_user }}"
    group: docker
    state: file
